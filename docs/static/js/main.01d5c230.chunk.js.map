{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","placeholder","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","setTimeout","then","imgs","useFetchGifts","GiftExpertApp","Categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAKlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAAW,SAACP,GAAD,OAAOF,EAAeE,EAAEQ,OAAOF,QAC1CG,YAAY,0D,+BCrBXC,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAQD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC5B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAabM,GAba,4CAAH,sDCERO,EAAe,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEvB,ECHyB,SAACA,GAC1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WAENC,YAAW,WACPzB,EAASC,GACJyB,MAAK,SAAAC,GAAI,OAAIJ,EAAS,CACnBf,KAAMmB,EACNN,SAAS,SAElB,OAEJ,CAACpB,IAGGqB,EDhBwBM,CAAe3B,GAAlCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,mCAAMpB,EAAN,OACCoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,aEQvCiB,EApBO,WAElB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OAAO,qCACH,+CACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQ6C,EAAWpB,KAAK,SAAAT,GACZ,OAAO,cAAC,EAAD,CAAyBA,SAAWA,GAArBA,Y,YCX1C8B,IAASC,OACL,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.01d5c230.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( c => [inputValue, ...c]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={ (e) => setInputValue( e.target.value ) }\r\n            placeholder='Ingrese una categoria para su busqueda de gifts :)'\r\n            \r\n            ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifts = async ( category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=G0wd5S5AuP1dcPjOgdveHbWe0glkh6LV`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifts = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifts;\r\n}","import React from 'react';\r\n\r\nexport const GiftGridItem = ( {title, url} ) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifts( category );\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n            {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map((img) => {\r\n                        return <GiftGridItem key={img.id} {...img} />\r\n                    })\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifts } from '../helpers/getGifts';\r\n\r\nexport const useFetchGifts = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        setTimeout(() => {\r\n            getGifts(category)\r\n                .then(imgs => setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                }))\r\n        }, 500)\r\n\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [Categories, setCategories] = useState(['One punch']);\r\n\r\n    return <>\r\n        <h2>GiftExpertApp</h2>\r\n        <hr />\r\n\r\n        <AddCategory setCategories={setCategories} />\r\n\r\n        <ol>\r\n            {\r\n                Categories.map( category => {\r\n                    return <GiftGrid key={category} category= {category}/>\r\n                })\r\n            }\r\n        </ol>\r\n    </>\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\nimport \"animate.css\";\n\nReactDOM.render(\n    <GiftExpertApp />\n    ,document.getElementById('root')\n);"],"sourceRoot":""}